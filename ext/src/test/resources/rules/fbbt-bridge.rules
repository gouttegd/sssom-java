# Prefix declarations
prefix UBERON: <http://purl.obolibrary.org/obo/UBERON_>
prefix CL:     <http://purl.obolibrary.org/obo/CL_>
prefix BFO:    <http://purl.obolibrary.org/obo/BFO_>
prefix FBbt:   <http://purl.obolibrary.org/obo/FBbt_>
prefix FBdv:   <http://purl.obolibrary.org/obo/FBdv_>
prefix IAO:    <http://purl.obolibrary.org/obo/IAO_>
prefix TAX:    <http://purl.obolibrary.org/obo/NCBITaxon_>
prefix OIO:    <http://www.geneontology.org/formats/oboInOwl#>

# Header functions
declare(TAX:7227);
declare(BFO:0000050, BFO:0000066, /type="object_property");

# The relation to use in bridging axioms:
# part_of by default, or occurs_in if the object is an occurrent
set_var("TAXREL", BFO:0000050);
is_a(%{object_id}, UBERON:0000000) -> set_var("TAXREL", BFO:0000066);

# Rules
# -----

# Make sure UBERON/CL terms are on the object side
(subject==UBERON:* || subject==CL:*) -> invert();

# Exclude any mapping to something else than UBERON/CL
!(object==UBERON:* || object==CL:*) -> stop();

# Check that the object exists
!exists(%{object_id}) -> stop();

# A foreign term should be mapped to no more than one UBERON/CL term
!cardinality==*:1 -> stop();

# FBbt/dv bridge
[fbbt] (subject==FBbt:* || subject==FBdv:*) predicate==semapv:crossSpeciesExactMatch {
    [uberon-fbbt] object==UBERON:* -> {
        annotate(%{subject_id}, IAO:0000589, '%{object_label} (Drosophila)');
        create_axiom('<%{subject_id}> EquivalentTo: <%{object_id}> and (<%{TAXREL}> some TAX:7227)');
    }
    [cl-fbbt] object==CL:* -> {
        annotate(%{subject_id}, IAO:0000589, '%{object_label} (Drosophila)');
        create_axiom('<%{subject_id}> EquivalentTo: <%{object_id}> and (<%{TAXREL}> some TAX:7227)');
    }
}

# Old-style cross-references, for backwards compatibility
[xrefs] predicate==* -> annotate(%{object_id}, OIO:hasDbXref, %{subject_id|short});
